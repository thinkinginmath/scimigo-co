services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: scimigo
      POSTGRES_PASSWORD: scimigo
      POSTGRES_DB: scimigo_co
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../migrations/seed.sql:/docker-entrypoint-initdb.d/seed.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scimigo"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres

  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    ports:
      - "8000:8000"
    environment:
      CO_DB_URL: postgresql+asyncpg://scimigo:scimigo@postgres/scimigo_co
      CO_REDIS_URL: redis://redis:6379/0
      CO_DEBUG: "true"
      CO_ENVIRONMENT: development
      PYTHONPATH: /app/src
    volumes:
      - ../src:/app/src:ro
      - ../migrations:/app/migrations:ro
      - ../alembic.ini:/app/alembic.ini:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["uvicorn", "co.server:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

volumes:
  postgres_data: